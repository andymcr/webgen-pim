-- @atlcompiler emftvm 
--
-- @path Website=/work.andycarpenter.webgen.pims.model/model/website.ecore
-- @path Service=/work.andycarpenter.psms.service/model/Service.xecore
-- @path API=/work.andycarpenter.psms.rest/model/api.xecore

module API;
create api : API from website : Website, service : Service;

uses PersistenceHelpers;


rule API {
	from website : Website!API
	to api : API!API (
		resources <- website.resources
	)
}


rule Resource {
	from website : Website!Resource
	to api : API!Resource (
		repository <-
			if website.repository.oclIsUndefined() then
				OclUndefined
			else
				website.repository.findRepository()
			endif,
		uriElement <-
			if website.uriElement.trim() <> '' then
				website.uriElement.trim()
			else if not website.name.oclIsUndefined() then
				website.name.createName()
			else
				''
			endif endif,
		enableDefaultGetOne <- website.enableDefaultGetOne,
		enableDefaultGetAll <- website.enableDefaultGetAll,
		getAll <-
			if website.getAll.oclIsUndefined() then
				OclUndefined
			else
				website.getAll.findSelection()
			endif,
		getOne <-
			if website.getOne.oclIsUndefined() then
				OclUndefined
			else
				website.getOne.findSelection()
			endif,
--		filters <- website.filters,
		defaultSerializationGroups <-
			website.defaultSerializationGroups
				->collect(g | thisModule.findOrmSerializationGroup(g.name)),
		childResources <- website.childResources
	)
} 
