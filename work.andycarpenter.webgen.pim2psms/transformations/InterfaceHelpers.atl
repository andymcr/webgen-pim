-- @atlcompiler emftvm

library InterfaceHelpers;

uses WebsiteHelpers;


helper context Website!Attribute def: displayLabel() : String
	= if not self.displayLabel.oclIsUndefined() and self.displayLabel.trim() <> '' then
			self.displayLabel.trim()
		else
			self.name.createLabel()
		endif;

helper context Website!Association def: displayLabel() : String
	= if not self.displayLabel.oclIsUndefined() and self.displayLabel.trim() <> '' then
			self.displayLabel.trim()
		else
			self.name.createLabel()
		endif;

helper context Website!Association def: targetDisplayLabel() : String
	= if not self.targetDisplayLabel.oclIsUndefined() and self.targetDisplayLabel.trim() <> '' then
			self.targetDisplayLabel.trim()
		else
			self.targetFeatureName().createLabel()
		endif;

helper context Website!UnitElement def: displayLabel() : String
	= if not self.displayLabel.oclIsUndefined() and self.displayLabel.trim() <> '' then
			self.displayLabel.trim()
		else
			self.attribute.displayLabel()
		endif;

helper context Website!UnitAssociation def: displayLabel() : String
	= if not self.displayLabel.oclIsUndefined() and self.displayLabel.trim() <> '' then
			self.displayLabel.trim()
		else
			if self.childFeature.oclIsUndefined() then
				if self.isSourceAssociation then
					self.association.displayLabel()
				else
					self.association.targetDisplayLabel()
				endif 
			else
				self.childFeature.displayLabel()
			endif
		endif;


helper context Website!InterfaceField def: displayLabel() : String
	= self.displayLabel.trim();

helper context Website!ChildPathAttribute def: displayLabel() : String
	= self.attribute.displayLabel();

helper context Website!ChildPathAssociation def: displayLabel() : String
	= if self.childFeature.oclIsUndefined() then
				if self.isSourceAssociation then
					self.association.displayLabel()
				else
					self.association.targetDisplayLabel()
				endif 
			else
				self.childFeature.displayLabel()
			endif;

helper context Website!UnitElement def: hasCustomisedDisplayLabel() : Boolean
	= self.displayLabel() <> self.attribute.displayLabel();

helper context Website!UnitAssociation def: hasCustomisedDisplayLabel() : Boolean
	= if self.childFeature.oclIsUndefined() then
			if self.isSourceAssociation then
				self.displayLabel() <> self.association.displayLabel()
			else
				self.displayLabel() <> self.association.targetDisplayLabel()
			endif
		else
			true
		endif;

helper context Website!UnitElement def: placeholder() : String
	= if not self.placeholder.oclIsUndefined() and self.placeholder.trim() <> '' then
			self.placeholder.trim()
		else if not self.attribute.placeholder.oclIsUndefined() and self.attribute.placeholder.trim() <> '' then
			self.attribute.placeholder.trim()
		else
			if self.attribute.oclIsTypeOf(Website!DataTypeAttribute) then
				if not self.attribute.dataType.placeholder.oclIsUndefined() and self.attribute.dataType.placeholder.trim() <> '' then
					self.attribute.dataType.placeholder.trim()
				else
					self.name.createLabel()
				endif
			else
				self.name.createLabel()
			endif
		endif endif;

helper context Website!InterfaceField def: placeholder() : String
	= if not self.placeholder.oclIsUndefined() and self.placeholder.trim() <> '' then
			self.placeholder.trim()
		else
			if self.oclIsTypeOf(Website!DataTypeField) then
				if not self.dataType.placeholder.oclIsUndefined() and self.dataType.placeholder.trim() <> '' then
					self.dataType.placeholder.trim()
				else
					self.name.createLabel()
				endif
			else
				self.name.createLabel()
			endif
		endif;

helper context Website!DeleteAction def: confirmMessage() : String
	= if not self.confirmMessage.oclIsUndefined() and self.confirmMessage.trim() <> '' then
				self.confirmMessage.trim()
			else if not self.displayLabel.oclIsUndefined() and self.displayLabel.trim() <> '' then
				self.displayLabel.trim().concat('?')
			else
				self.name.createLabel().concat('?')
			endif endif;