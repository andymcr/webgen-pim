-- @atlcompiler emftvm 
--
-- @path Website=/uk.ac.man.cs.mdsd.webgen.model/model/website.ecore
-- @path ORM=/uk.ac.man.cs.mdsd.orm.model/model/orm.ecore
-- @path WAF=/uk.ac.man.cs.mdsd.waf.model/model/Waf.ecore

module InterfaceImplicitFields;
create dummyWaf : WAF refining waf : WAF, orm : ORM;

uses PersistenceHelpers;


rule QueryParameterWithout {
	from partialWaf : WAF!QueryParameter (partialWaf.parameter.oclIsUndefined())
	to waf : WAF!QueryParameter (
		parameter <-
			if not partialWaf.refImmediateComposite().selection.oclIsUndefined() then
				partialWaf.refImmediateComposite().selection.parameters->any(p | p.name = partialWaf.name)
			else
				OclUndefined
			endif
	)
}

rule QueryWithoutActuals {
	from partialWaf : WAF!Query (partialWaf.parameters->isEmpty())
	to waf : WAF!Query (
		parameters <- Sequence{thisModule.implicitQueryParameter(partialWaf)}
	)
}

lazy rule implicitQueryParameter {
	from partialWaf : WAF!Query
	to waf : WAF!QueryParameter (
		formal <- partialWaf.filter.parameters->first(),
		value <- partialWaf.filter.parameters->first().defaultValue
	)
}


abstract rule DynamicUnit {
	from partialWaf : WAF!DynamicUnit
	to waf : WAF!DynamicUnit (
	)
}

--@extends DynamicUnit
abstract rule SingletonUnit {
	from partialWaf : WAF!SingletonUnit
	to waf : WAF!SingletonUnit (
		displayFields <-
			if partialWaf.displayFields->notEmpty()
					or partialWaf.contentType.oclIsUndefined()
					or  not partialWaf.hasWhenFieldsEmptyAddImplicitFields then
				partialWaf.displayFields
			else
				partialWaf.contentType.features
					->select(f | f.oclIsKindOf(ORM!Attribute))
					->collect(f | thisModule.implicitUnitAttribute(f))
				->union(
					if not waf.oclIsTypeOf(WAF!CreateUnit) then
						Sequence{}
					else
						partialWaf.contentType.features
							->select(f | f.oclIsKindOf(WAF!Association))
							->select(f | f.visible or f.container)
							->collect(f | thisModule.implicitUnitAssociation(f))
					endif)
				endif
	)
}

--@extends DynamicUnit
abstract rule CollectionUnit {
	from partialWaf : WAF!CollectionUnit
	to waf : WAF!CollectionUnit (
		displayFields <-
			if partialWaf.displayFields->notEmpty()
					or partialWaf.contentType.oclIsUndefined()
					or  not partialWaf.hasWhenFieldsEmptyAddImplicitFields then
				partialWaf.displayFields
			else
				partialWaf.contentType.features
					->select(f | f.oclIsKindOf(WAF!Attribute))
					->collect(f | thisModule.implicitUnitAttribute(f))
				->union(
					if not partialWaf.oclIsKindOf(WAF!IndexUnit) and not waf.oclIsTypeOf(WAF!CreateUnit) then
						Sequence{}
					else
						partialWaf.contentType.allFeatures
							->select(f | f.oclIsKindOf(WAF!Association))
							->select(f | f.visible or f.isContainer)
							->collect(f | thisModule.implicitUnitAssociation(f))
					endif)
				endif
	)
}

lazy abstract rule implicitUnitFeature {
	from partialWaf : WAF!Feature
	to waf : WAF!UnitFeature (
		displayLabel <- partialWaf.displayLabel
	)
}

--@extends implicitUnitFeature
lazy rule implicitUnitAttribute {
	from partialWaf : WAF!Attribute
	to waf : WAF!UnitAttribute (
		attribute <- partialWaf
	)
	do {
		waf;
	}
}

--@extends implicitUnitFeature
lazy rule implicitUnitAssociation {
	from partialWaf : WAF!Association
	to waf : WAF!UnitAssociation (
		association <- partialWaf
	)
	do {
		waf;
	}
}


-- @extends SingletonUnit
abstract rule EditUnit {
	from partialWaf : WAF!EditUnit
	to waf : WAF!EditUnit (
	)
}

-- @extends EditUnit
rule CreateUnit {
	from partialWaf : WAF!CreateUnit
	to waf : WAF!CreateUnit (
	)
}

-- @extends EditUnit
rule CreateUpdateUnit {
	from partialWaf : WAF!CreateUpdateUnit
	to waf : WAF!CreateUpdateUnit (
	)
}

-- @extends EditUnit
rule UpdateUnit {
	from partialWaf : WAF!UpdateUnit
	to waf : WAF!UpdateUnit (
	)
}

-- @extends SingletonUnit
rule DetailsUnit {
	from partialWaf : WAF!DetailsUnit
	to waf : WAF!DetailsUnit (
	)
}

-- @extends CollectionUnit
abstract rule IndexUnit {
	from partialWaf : WAF!IndexUnit
	to waf : WAF!IndexUnit (
	)
}

-- @extends IndexUnit
rule IndexGridUnit {
	from partialWaf : WAF!IndexGridUnit
	to waf : WAF!IndexGridUnit (
	)
}

-- @extends IndexUnit
rule IndexPageDirectionUnit {
	from partialWaf : WAF!IndexPageDirectionUnit
	to waf : WAF!IndexPageDirectionUnit (
	)
}

-- @extends IndexUnit
rule IndexLineDirectionUnit {
	from partialWaf : WAF!IndexLineDirectionUnit
	to waf : WAF!IndexLineDirectionUnit (
	)
}

-- @extends CollectionUnit
abstract rule CardsUnit {
	from partialWaf : WAF!CardsUnit
	to waf : WAF!CardsUnit (
	)
}

-- @extends CardsUnit
rule TextCardsUnit {
	from partialWaf : WAF!TextCardsUnit
	to waf : WAF!TextCardsUnit (
	)
}

-- @extends CollectionUnit
abstract rule ImageUnit {
	from partialWaf : WAF!ImageUnit
	to waf : WAF!ImageUnit (
	)
}

-- no extends so that implicit fields never added
-- extends CardsUnit, ImageUnit
rule ImageCardsUnit {
	from partialWaf : WAF!ImageCardsUnit
	to waf : WAF!ImageCardsUnit (
	)
}

-- no extends so that implicit fields never added
-- extends ImageUnit
rule sliderUnit {
	from partialWaf : WAF!SliderUnit
	to waf : WAF!SliderUnit (
	)
}

-- no extends so that implicit fields never added
-- extends ImageUnit
rule galleryUnit {
	from partialWaf : WAF!GalleryUnit
	to waf : WAF!GalleryUnit (
	)
}

-- @extends DynamicUnit
abstract rule ControlUnit {
	from partialWaf : WAF!ControlUnit
	to waf : WAF!ControlUnit (
	)
}

-- @extends ControlUnit
rule SearchUnit {
	from partialWaf : WAF!SearchUnit
	to waf : WAF!SearchUnit (
	)
}