/**
 */
package work.andycarpenter.webgen.pims.webui.provider;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.edit.command.CommandParameter;

import org.eclipse.emf.edit.domain.EditingDomain;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import work.andycarpenter.webgen.pims.expression.ExpressionPackage;
import work.andycarpenter.webgen.pims.expression.PredicateComparisonOperator;
import work.andycarpenter.webgen.pims.expression.PredicateEqualityOperator;
import work.andycarpenter.webgen.pims.expression.PredicateInOperator;
import work.andycarpenter.webgen.pims.expression.PredicateIsEmpty;
import work.andycarpenter.webgen.pims.expression.PredicateIsNull;
import work.andycarpenter.webgen.pims.expression.PredicateIsOperator;
import work.andycarpenter.webgen.pims.expression.PredicateLikeOperator;

import work.andycarpenter.webgen.pims.expression.util.ExpressionSwitch;

import work.andycarpenter.webgen.pims.persistence.Attribute;
import work.andycarpenter.webgen.pims.persistence.PersistencePackage;

import work.andycarpenter.webgen.pims.persistence.util.PersistenceSwitch;

import work.andycarpenter.webgen.pims.service.Constant;
import work.andycarpenter.webgen.pims.service.Order;
import work.andycarpenter.webgen.pims.service.ServicePackage;

import work.andycarpenter.webgen.pims.service.util.ServiceSwitch;

import work.andycarpenter.webgen.pims.webui.WebuiFactory;

import work.andycarpenter.webgen.pims.webui.util.WebuiAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class WebuiItemProviderAdapterFactory extends WebuiAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public WebuiItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.WebUI} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WebUIItemProvider webUIItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.WebUI}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWebUIAdapter() {
		if (webUIItemProvider == null) {
			webUIItemProvider = new WebUIItemProvider(this);
		}

		return webUIItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.Menu} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MenuItemProvider menuItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.Menu}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMenuAdapter() {
		if (menuItemProvider == null) {
			menuItemProvider = new MenuItemProvider(this);
		}

		return menuItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.SubmenuEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubmenuEntryItemProvider submenuEntryItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.SubmenuEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubmenuEntryAdapter() {
		if (submenuEntryItemProvider == null) {
			submenuEntryItemProvider = new SubmenuEntryItemProvider(this);
		}

		return submenuEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.ActionMenuEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionMenuEntryItemProvider actionMenuEntryItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.ActionMenuEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionMenuEntryAdapter() {
		if (actionMenuEntryItemProvider == null) {
			actionMenuEntryItemProvider = new ActionMenuEntryItemProvider(this);
		}

		return actionMenuEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.EditStaticTextMenuEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EditStaticTextMenuEntryItemProvider editStaticTextMenuEntryItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.EditStaticTextMenuEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEditStaticTextMenuEntryAdapter() {
		if (editStaticTextMenuEntryItemProvider == null) {
			editStaticTextMenuEntryItemProvider = new EditStaticTextMenuEntryItemProvider(this);
		}

		return editStaticTextMenuEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.MenuFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MenuFeatureItemProvider menuFeatureItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.MenuFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMenuFeatureAdapter() {
		if (menuFeatureItemProvider == null) {
			menuFeatureItemProvider = new MenuFeatureItemProvider(this);
		}

		return menuFeatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.Query} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryItemProvider queryItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.Query}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryAdapter() {
		if (queryItemProvider == null) {
			queryItemProvider = new QueryItemProvider(this);
		}

		return queryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.QueryParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryParameterItemProvider queryParameterItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.QueryParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryParameterAdapter() {
		if (queryParameterItemProvider == null) {
			queryParameterItemProvider = new QueryParameterItemProvider(this);
		}

		return queryParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.Page} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PageItemProvider pageItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.Page}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPageAdapter() {
		if (pageItemProvider == null) {
			pageItemProvider = new PageItemProvider(this);
		}

		return pageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.PageLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PageLinkItemProvider pageLinkItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.PageLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPageLinkAdapter() {
		if (pageLinkItemProvider == null) {
			pageLinkItemProvider = new PageLinkItemProvider(this);
		}

		return pageLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.RouteActual} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RouteActualItemProvider routeActualItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.RouteActual}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRouteActualAdapter() {
		if (routeActualItemProvider == null) {
			routeActualItemProvider = new RouteActualItemProvider(this);
		}

		return routeActualItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.StaticUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaticUnitItemProvider staticUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.StaticUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaticUnitAdapter() {
		if (staticUnitItemProvider == null) {
			staticUnitItemProvider = new StaticUnitItemProvider(this);
		}

		return staticUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.CreateSitemapUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CreateSitemapUnitItemProvider createSitemapUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.CreateSitemapUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCreateSitemapUnitAdapter() {
		if (createSitemapUnitItemProvider == null) {
			createSitemapUnitItemProvider = new CreateSitemapUnitItemProvider(this);
		}

		return createSitemapUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.UnitElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitElementItemProvider unitElementItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.UnitElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitElementAdapter() {
		if (unitElementItemProvider == null) {
			unitElementItemProvider = new UnitElementItemProvider(this);
		}

		return unitElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.UnitAssociation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitAssociationItemProvider unitAssociationItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.UnitAssociation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitAssociationAdapter() {
		if (unitAssociationItemProvider == null) {
			unitAssociationItemProvider = new UnitAssociationItemProvider(this);
		}

		return unitAssociationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.ChildPathAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildPathAttributeItemProvider childPathAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.ChildPathAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChildPathAttributeAdapter() {
		if (childPathAttributeItemProvider == null) {
			childPathAttributeItemProvider = new ChildPathAttributeItemProvider(this);
		}

		return childPathAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.ChildPathAssociation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildPathAssociationItemProvider childPathAssociationItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.ChildPathAssociation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChildPathAssociationAdapter() {
		if (childPathAssociationItemProvider == null) {
			childPathAssociationItemProvider = new ChildPathAssociationItemProvider(this);
		}

		return childPathAssociationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.FeaturePathAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeaturePathAttributeItemProvider featurePathAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.FeaturePathAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeaturePathAttributeAdapter() {
		if (featurePathAttributeItemProvider == null) {
			featurePathAttributeItemProvider = new FeaturePathAttributeItemProvider(this);
		}

		return featurePathAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.FeaturePathAssociation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeaturePathAssociationItemProvider featurePathAssociationItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.FeaturePathAssociation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeaturePathAssociationAdapter() {
		if (featurePathAssociationItemProvider == null) {
			featurePathAssociationItemProvider = new FeaturePathAssociationItemProvider(this);
		}

		return featurePathAssociationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.FeaturePathLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeaturePathLabelItemProvider featurePathLabelItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.FeaturePathLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeaturePathLabelAdapter() {
		if (featurePathLabelItemProvider == null) {
			featurePathLabelItemProvider = new FeaturePathLabelItemProvider(this);
		}

		return featurePathLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.UnitLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitLabelItemProvider unitLabelItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.UnitLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitLabelAdapter() {
		if (unitLabelItemProvider == null) {
			unitLabelItemProvider = new UnitLabelItemProvider(this);
		}

		return unitLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.DataTypeField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataTypeFieldItemProvider dataTypeFieldItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.DataTypeField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataTypeFieldAdapter() {
		if (dataTypeFieldItemProvider == null) {
			dataTypeFieldItemProvider = new DataTypeFieldItemProvider(this);
		}

		return dataTypeFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.DateField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DateFieldItemProvider dateFieldItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.DateField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDateFieldAdapter() {
		if (dateFieldItemProvider == null) {
			dateFieldItemProvider = new DateFieldItemProvider(this);
		}

		return dateFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.CaptchaField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CaptchaFieldItemProvider captchaFieldItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.CaptchaField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCaptchaFieldAdapter() {
		if (captchaFieldItemProvider == null) {
			captchaFieldItemProvider = new CaptchaFieldItemProvider(this);
		}

		return captchaFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.UnitSupportAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitSupportActionItemProvider unitSupportActionItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.UnitSupportAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitSupportActionAdapter() {
		if (unitSupportActionItemProvider == null) {
			unitSupportActionItemProvider = new UnitSupportActionItemProvider(this);
		}

		return unitSupportActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.CreateUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CreateUnitItemProvider createUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.CreateUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCreateUnitAdapter() {
		if (createUnitItemProvider == null) {
			createUnitItemProvider = new CreateUnitItemProvider(this);
		}

		return createUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.CreateUpdateUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CreateUpdateUnitItemProvider createUpdateUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.CreateUpdateUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCreateUpdateUnitAdapter() {
		if (createUpdateUnitItemProvider == null) {
			createUpdateUnitItemProvider = new CreateUpdateUnitItemProvider(this);
		}

		return createUpdateUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.UpdateUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdateUnitItemProvider updateUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.UpdateUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdateUnitAdapter() {
		if (updateUnitItemProvider == null) {
			updateUnitItemProvider = new UpdateUnitItemProvider(this);
		}

		return updateUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.MapUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MapUnitItemProvider mapUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.MapUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMapUnitAdapter() {
		if (mapUnitItemProvider == null) {
			mapUnitItemProvider = new MapUnitItemProvider(this);
		}

		return mapUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.DetailsUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DetailsUnitItemProvider detailsUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.DetailsUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDetailsUnitAdapter() {
		if (detailsUnitItemProvider == null) {
			detailsUnitItemProvider = new DetailsUnitItemProvider(this);
		}

		return detailsUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.IndexUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndexUnitItemProvider indexUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.IndexUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndexUnitAdapter() {
		if (indexUnitItemProvider == null) {
			indexUnitItemProvider = new IndexUnitItemProvider(this);
		}

		return indexUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.SearchUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SearchUnitItemProvider searchUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.SearchUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSearchUnitAdapter() {
		if (searchUnitItemProvider == null) {
			searchUnitItemProvider = new SearchUnitItemProvider(this);
		}

		return searchUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.ImageIndexUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImageIndexUnitItemProvider imageIndexUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.ImageIndexUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImageIndexUnitAdapter() {
		if (imageIndexUnitItemProvider == null) {
			imageIndexUnitItemProvider = new ImageIndexUnitItemProvider(this);
		}

		return imageIndexUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.SliderUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SliderUnitItemProvider sliderUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.SliderUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSliderUnitAdapter() {
		if (sliderUnitItemProvider == null) {
			sliderUnitItemProvider = new SliderUnitItemProvider(this);
		}

		return sliderUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.GalleryUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GalleryUnitItemProvider galleryUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.GalleryUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGalleryUnitAdapter() {
		if (galleryUnitItemProvider == null) {
			galleryUnitItemProvider = new GalleryUnitItemProvider(this);
		}

		return galleryUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.RegistrationUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RegistrationUnitItemProvider registrationUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.RegistrationUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRegistrationUnitAdapter() {
		if (registrationUnitItemProvider == null) {
			registrationUnitItemProvider = new RegistrationUnitItemProvider(this);
		}

		return registrationUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.LoginUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoginUnitItemProvider loginUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.LoginUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoginUnitAdapter() {
		if (loginUnitItemProvider == null) {
			loginUnitItemProvider = new LoginUnitItemProvider(this);
		}

		return loginUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.ForgottenPasswordUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForgottenPasswordUnitItemProvider forgottenPasswordUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.ForgottenPasswordUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForgottenPasswordUnitAdapter() {
		if (forgottenPasswordUnitItemProvider == null) {
			forgottenPasswordUnitItemProvider = new ForgottenPasswordUnitItemProvider(this);
		}

		return forgottenPasswordUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.SelectAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelectActionItemProvider selectActionItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.SelectAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelectActionAdapter() {
		if (selectActionItemProvider == null) {
			selectActionItemProvider = new SelectActionItemProvider(this);
		}

		return selectActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.DeleteAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeleteActionItemProvider deleteActionItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.DeleteAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeleteActionAdapter() {
		if (deleteActionItemProvider == null) {
			deleteActionItemProvider = new DeleteActionItemProvider(this);
		}

		return deleteActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.FeatureSupportAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeatureSupportActionItemProvider featureSupportActionItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.FeatureSupportAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeatureSupportActionAdapter() {
		if (featureSupportActionItemProvider == null) {
			featureSupportActionItemProvider = new FeatureSupportActionItemProvider(this);
		}

		return featureSupportActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.webgen.pims.webui.Badge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BadgeItemProvider badgeItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.webgen.pims.webui.Badge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBadgeAdapter() {
		if (badgeItemProvider == null) {
			badgeItemProvider = new BadgeItemProvider(this);
		}

		return badgeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * A child creation extender for the {@link ExpressionPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class ExpressionChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends ExpressionSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateEqualityOperator(PredicateEqualityOperator object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_EQUALITY_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_EQUALITY_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_EQUALITY_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_EQUALITY_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_EQUALITY_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_EQUALITY_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateComparisonOperator(PredicateComparisonOperator object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_COMPARISON_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_COMPARISON_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_COMPARISON_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_COMPARISON_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_COMPARISON_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_COMPARISON_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateInOperator(PredicateInOperator object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IN_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IN_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IN_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IN_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IN_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IN_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateIsOperator(PredicateIsOperator object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateLikeOperator(PredicateLikeOperator object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_LIKE_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_LIKE_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_LIKE_OPERATOR__LEFT,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_LIKE_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_LIKE_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_LIKE_OPERATOR__RIGHT,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateIsEmpty(PredicateIsEmpty object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_EMPTY__FEATURE,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_EMPTY__FEATURE,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_EMPTY__FEATURE,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateIsNull(PredicateIsNull object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_NULL__FEATURE,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_NULL__FEATURE,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_NULL__FEATURE,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return WebuiEditPlugin.INSTANCE;
		}
	}

	/**
	 * A child creation extender for the {@link PersistencePackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class PersistenceChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends PersistenceSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseAttribute(Attribute object) {
				newChildDescriptors.add
					(createChildParameter
						(PersistencePackage.Literals.ATTRIBUTE__DEFAULT_VALUE,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(PersistencePackage.Literals.ATTRIBUTE__DEFAULT_VALUE,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(PersistencePackage.Literals.ATTRIBUTE__DEFAULT_VALUE,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return WebuiEditPlugin.INSTANCE;
		}
	}

	/**
	 * A child creation extender for the {@link ServicePackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class ServiceChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends ServiceSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseConstant(Constant object) {
				newChildDescriptors.add
					(createChildParameter
						(ServicePackage.Literals.CONSTANT__VALUE,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ServicePackage.Literals.CONSTANT__VALUE,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ServicePackage.Literals.CONSTANT__VALUE,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseOrder(Order object) {
				newChildDescriptors.add
					(createChildParameter
						(ServicePackage.Literals.ORDER__PATH,
						 WebuiFactory.eINSTANCE.createFeaturePathAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ServicePackage.Literals.ORDER__PATH,
						 WebuiFactory.eINSTANCE.createFeaturePathAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ServicePackage.Literals.ORDER__PATH,
						 WebuiFactory.eINSTANCE.createFeaturePathLabel()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return WebuiEditPlugin.INSTANCE;
		}
	}

}
