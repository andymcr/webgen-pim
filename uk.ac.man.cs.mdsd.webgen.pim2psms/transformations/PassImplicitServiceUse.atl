-- @atlcompiler emftvm 
--
-- @path Website=/uk.ac.man.cs.mdsd.webgen.model/model/website.ecore
-- @path ORM=/uk.ac.man.cs.mdsd.orm.model/model/orm.ecore
-- @path WAF=/uk.ac.man.cs.mdsd.waf.model/model/Waf.ecore

module PassImplicitServiceUse;
create waf : WAF from website : Website, partialWaf : WAF;

uses WebsiteHelpers;
uses CopyPartialWaf;


helper context WAF!Service def: getServiceEntityFeature(name : String) : WAF!ServiceEntityFeature
	= self.features->any(f | f.name = name);

helper context WAF!UnitFeature def: findServiceEntityFeature() : WAF!ServiceEntityFeature
	= if not self.serviceFeature.oclIsUndefined() then
			self.serviceFeature
		else
			let service : WAF!Service = thisModule.findWafService(
				self.displayedOn.getWebsiteUnit().source.name)
			in service.getServiceEntityFeature(self.name)
		endif;

helper def: findWebsitePage(name : String) : Website!Page
	= Website!Page.allInstancesFrom('website')->any(d | d.name = name);

helper context WAF!DynamicUnit def: getWebsiteUnit() : Website!DynamicUnit
	= let websiteContainer : Website!UnitContainer
		= if self.displayedOn.oclIsTypeOf(WAF!Page) then
				thisModule.findWebsitePage(self.displayedOn.name)
			else
				self.displayedOn.getWebsiteIncludedFeature()
			endif
		in websiteContainer.units->any(u | u.name = self.name);

helper context WAF!UnitAssociation def: getWebsiteIncludedFeature() : Website!UnitAssociation
	= self.displayedOn.getWebsiteUnit()
		.displayFields->any(f | f.name = self.name);


-- @extends NamedDisplayElement, ContentUnitFields
abstract rule ContentUnit {
	from partialWaf : WAF!ContentUnit
	to waf : WAF!ContentUnit (
	)
}

-- @extends ContentUnit, StaticUnitFields
rule StaticUnit {
	from partialWaf : WAF!StaticUnit
	to waf : WAF!StaticUnit (
		service <-
			if thisModule.findWebsiteProperties().staticUnitsEditable then
				thisModule.findWafService('StaticText')
			else
				OclUndefined
			endif
	)
}

-- @extends ContentUnit, DynamicUnitFields
abstract rule DynamicUnit {
	from partialWaf : WAF!DynamicUnit
	to waf : WAF!DynamicUnit (
		service <-
			if not partialWaf.service.oclIsUndefined() then
				partialWaf.service
			else
				thisModule.findWafService(
					partialWaf.getWebsiteUnit().source.name)
			endif
	)
}

-- @extends UnitFeature, IncludedElement
rule UnitElement {
	from partialWaf : WAF!UnitElement
	to waf : WAF!UnitElement (
		serviceFeature <- partialWaf.findServiceEntityFeature(),
		placeholder <- partialWaf.placeholder,
		validationPattern <- partialWaf.validationPattern
	)
}

-- @extends UnitFeature, IncludedAssociation, UnitContainer
rule UnitAssociation {
	from partialWaf : WAF!UnitAssociation
	to waf : WAF!UnitAssociation (
		serviceFeature <- partialWaf.findServiceEntityFeature(),
		childFeature <- partialWaf.childFeature,
		selection <- partialWaf.selection,
		dynamicLabel <- partialWaf.dynamicLabel,
		filters <- partialWaf.filters,
		maximumDisplaySize <- partialWaf.maximumDisplaySize,
		displayOption <- partialWaf.displayOption
	)
}

-- @extends DynamicUnit, EditUnitFields
abstract rule EditUnit {
	from partialWaf : WAF!EditUnit
	to waf : WAF!EditUnit (
	)
}

-- @extends EditUnit
rule CreateUnit {
	from partialWaf : WAF!CreateUnit
	to waf : WAF!CreateUnit (
	)
}

-- @extends EditUnit, CreateUpdateUnitFields
rule CreateUpdateUnit {
	from partialWaf : WAF!CreateUpdateUnit
	to waf : WAF!CreateUpdateUnit (
	)
}

-- @extends EditUnit, MapUnitFields
rule MapUnit {
	from partialWaf : WAF!MapUnit
	to waf : WAF!MapUnit (
	)
}

-- @extends EditUnit
rule UpdateUnit {
	from partialWaf : WAF!UpdateUnit
	to waf : WAF!UpdateUnit (
	)
}

-- @extends DynamicUnit, DataUnitFields
abstract rule DataUnit {
	from partialWaf : WAF!DataUnit
	to waf : WAF!DataUnit (
	)
}

-- @extends DataUnit, DetailsUnitFields
rule DetailsUnit {
	from partialWaf : WAF!DetailsUnit
	to waf : WAF!DetailsUnit (
	)
}

-- @extends DataUnit, IndexUnitFields
abstract rule IndexUnit {
	from partialWaf : WAF!IndexUnit
	to waf : WAF!IndexUnit (
	)
}

-- @extends IndexUnit, IndexGridUnitFields
rule IndexGridUnit {
	from partialWaf : WAF!IndexGridUnit
	to waf : WAF!IndexGridUnit (
	)
}

-- @extends IndexUnit, IndexPageDirectionUnitFields
rule IndexPageDirectionUnit {
	from partialWaf : WAF!IndexPageDirectionUnit
	to waf : WAF!IndexPageDirectionUnit (
	)
}

-- @extends IndexUnit, IndexLineDirectionUnitFields
rule IndexLineDirectionUnit {
	from partialWaf : WAF!IndexLineDirectionUnit
	to waf : WAF!IndexLineDirectionUnit (
	)
}

-- @extends DynamicUnit, ControlUnitFields
abstract rule ControlUnit {
	from partialWaf : WAF!ControlUnit
	to waf : WAF!ControlUnit (
	)
}

-- @extends ControlUnit, SearchUnitFields
rule SearchUnit {
	from partialWaf : WAF!SearchUnit
	to waf : WAF!SearchUnit (
	)
}

-- @extends ControlUnit, ActionUnitFields
rule ActionUnit {
	from partialWaf : WAF!ActionUnit
	to waf : WAF!ActionUnit (
	)
}

-- @extends EditUnit
rule RegistrationUnit {
	from partialWaf : WAF!RegistrationUnit
	to waf : WAF!RegistrationUnit (
	)
}

-- @extends ControlUnit, LoginUnitFields
rule LoginUnit {
	from partialWaf : WAF!LoginUnit
	to waf : WAF!LoginUnit (
	)
}

-- @extends ControlUnit
rule ForgottenPasswordUnit {
	from partialWaf : WAF!ForgottenPasswordUnit
	to waf : WAF!ForgottenPasswordUnit (
	)
}
