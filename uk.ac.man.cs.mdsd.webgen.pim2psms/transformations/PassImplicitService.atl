-- @atlcompiler emftvm 
--
-- @path Website=/uk.ac.man.cs.mdsd.webgen.model/model/website.ecore
-- @path ORM=/uk.ac.man.cs.mdsd.orm.model/model/orm.ecore
-- @path WAF=/uk.ac.man.cs.mdsd.waf.model/model/Waf.ecore

module PassImplicitService;
create dummyWaf : WAF refining waf : WAF, orm : ORM;


rule WafModel {
	from partialWaf : WAF!WafModel
	to waf : WAF!WafModel (
		services <- partialWaf.services
			->union(let servered : Sequence(ORM!EntityOrView)
				= partialWaf.services->collect(s | s.serves)
				in partialWaf.persistence.entitiesAndViews
					->select(eov | servered->excludes(eov))
					->collect(eov | thisModule.implicitService(eov))
			)
	)
}


lazy rule implicitService {
	from orm : ORM!EntityOrView
	to waf : WAF!Service (
-- TODO pularise
		name <- orm.name, 
		serves <- orm
	)
	do {
		waf;
	}
}
