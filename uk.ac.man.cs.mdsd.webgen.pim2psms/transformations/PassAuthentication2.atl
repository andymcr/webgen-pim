-- @atlcompiler emftvm 
--
-- @path Website=/uk.ac.man.cs.mdsd.webgen.model/model/website.ecore
-- @path ORM=/uk.ac.man.cs.mdsd.orm.model/model/orm.ecore
-- @path WAF=/uk.ac.man.cs.mdsd.waf.model/model/Waf.ecore

module PassAuthentication2;
create waf : WAF from partialWaf : WAF;

uses WebsiteHelpers;
uses CopyPartialWaf;


-- @extends UnitField, NamedDisplayElement
abstract rule InterfaceField {
	from partialWaf : WAF!InterfaceField
	to waf : WAF!InterfaceField (
		cardinality <- partialWaf.cardinality,
		defaultValue <- partialWaf.defaultValue,
		mustMatch <-
			if not partialWaf.mustMatch.oclIsUndefined() then
				partialWaf.mustMatch
			else if partialWaf.name = 'confirmEmail' then
				partialWaf.displayedOn.displayFields->any(f | f.name = 'email')
			else if partialWaf.name = 'confirmPassword' then
				partialWaf.displayedOn.displayFields->any(f | f.name = 'password')
			else
				OclUndefined
			endif endif endif,
		inputClass <- partialWaf.inputClass
	)
}

-- @extends InterfaceField
rule DataTypeField {
	from partialWaf : WAF!DataTypeField
	to waf : WAF!DataTypeField (
		dataType <- partialWaf.dataType,
		obfuscateFormFields <- partialWaf.obfuscateFormFields,
		caseInsensitive <- partialWaf.caseInsensitive,
		encrypt <- partialWaf.encrypt
	)
}

-- @extends InterfaceField
rule DateField {
	from partialWaf : WAF!DateField
	to waf : WAF!DateField (
		details <- partialWaf.details,
		format <- partialWaf.format
	)
}


-- @extends EditUnit
rule RegistrationUnit {
	from partialWaf : WAF!RegistrationUnit
	to waf : WAF!RegistrationUnit (
	)
}

-- @extends ControlUnit
rule LoginUnit {
	from partialWaf : WAF!LoginUnit
	to waf : WAF!LoginUnit (
		loginIdField <-
			if not partialWaf.loginIdField.oclIsUndefined() then
				partialWaf.loginIdField
			else
				partialWaf.displayFields->any(f | f.name = 'email')
			endif,
		passwordField <-
			if not partialWaf.passwordField.oclIsUndefined() then
				partialWaf.passwordField
			else
				partialWaf.displayFields->any(f | f.name = 'password')
			endif,
		rememberMeField <-
			if not partialWaf.rememberMeField.oclIsUndefined() then
				partialWaf.rememberMeField
			else
				partialWaf.displayFields->any(f | f.name = 'rememberMe')
			endif
	)
}

-- @extends ControlUnit
rule ForgottenPasswordUnit {
	from partialWaf : WAF!ForgottenPasswordUnit
	to waf : WAF!ForgottenPasswordUnit (
		loginIdField <-
			if not partialWaf.loginIdField.oclIsUndefined() then
				partialWaf.loginIdField
			else
				partialWaf.displayFields->any(f | f.name = 'email')
			endif
	)
}
