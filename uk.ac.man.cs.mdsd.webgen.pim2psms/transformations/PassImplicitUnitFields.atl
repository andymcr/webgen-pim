-- @atlcompiler emftvm 
--
-- @path Website=/uk.ac.man.cs.mdsd.webgen.model/model/website.ecore
-- @path ORM=/uk.ac.man.cs.mdsd.orm.model/model/orm.ecore
-- @path WAF=/uk.ac.man.cs.mdsd.waf.model/model/Waf.ecore

module PassImplicitUnitFields;
create waf : WAF from orm : ORM, partialWaf : WAF;

uses WebsiteHelpers;
uses CopyPartialWaf;


-- @extends NamedDisplayElement, ContentUnitFields
abstract rule ContentUnit {
	from partialWaf : WAF!ContentUnit
	to waf : WAF!ContentUnit (
	)
}

-- @extends ContentUnit, StaticUnitFields
rule StaticUnit {
	from partialWaf : WAF!StaticUnit
	to waf : WAF!StaticUnit (
	)
}

-- @extends ContentUnit, DynamicUnitFields
abstract rule DynamicUnit {
	from partialWaf : WAF!DynamicUnit
	to waf : WAF!DynamicUnit (
		displayFields <-
			if partialWaf.displayFields->notEmpty() then
				partialWaf.displayFields
			else
				partialWaf.service.features
					->select(f | f.oclIsTypeOf(WAF!ServiceEntityElement))
					->select(f | f.forcedValue.oclIsUndefined())
					->collect(f | thisModule.implicitUnitElement(f))
				->union(partialWaf.service.features
					->select(f | f.oclIsKindOf(WAF!ServiceAssociation))
					->select(f | f.forcedValue.oclIsUndefined())
					->select(f | not partialWaf.oclIsKindOf(WAF!IndexUnit) and not partialWaf.oclIsTypeOf(WAF!CreateUnit))
					->collect(f | thisModule.implicitUnitAssociation(f)))
				endif
	)
}

lazy abstract rule implicitUnitFeature {
	from partialWaf : WAF!ServiceEntityFeature
	to waf : WAF!UnitFeature (
		name <- partialWaf.name,
		cardinality <- partialWaf.cardinality,
		onlyDisplayWhenNotEmpty <- false,
		-- from IncludedFeature
		displayLabel <- partialWaf.displayLabel,
		headerClass <- partialWaf.headerClass,
		inputClass <- partialWaf.inputClass,
		displayClass <- partialWaf.displayClass,
		footerClass <- partialWaf.footerClass
	)
}

--@extends implicitUnitFeature
lazy rule implicitUnitElement {
	from partialWaf : WAF!ServiceEntityElement
	to waf : WAF!UnitElement (
		serviceFeature <- partialWaf,
		dateFormat <- partialWaf.dateFormat
	)
	do {
		waf;
	}
}

--@extends implicitUnitFeature
lazy rule implicitUnitAssociation {
	from partialWaf : WAF!ServiceAssociation
	to waf : WAF!UnitAssociation (
		serviceFeature <- partialWaf
	)
	do {
		waf;
	}
}


-- @extends DynamicUnit, EditUnitFields
abstract rule EditUnit {
	from partialWaf : WAF!EditUnit
	to waf : WAF!EditUnit (
	)
}

-- @extends EditUnit
rule CreateUnit {
	from partialWaf : WAF!CreateUnit
	to waf : WAF!CreateUnit (
	)
}

-- @extends EditUnit, CreateUpdateUnitFields
rule CreateUpdateUnit {
	from partialWaf : WAF!CreateUpdateUnit
	to waf : WAF!CreateUpdateUnit (
	)
}

-- @extends EditUnit
rule UpdateUnit {
	from partialWaf : WAF!UpdateUnit
	to waf : WAF!UpdateUnit (
	)
}

-- @extends DynamicUnit, DataUnitFields
abstract rule DataUnit {
	from partialWaf : WAF!DataUnit
	to waf : WAF!DataUnit (
	)
}

-- @extends DataUnit, DetailsUnitFields
rule DetailsUnit {
	from partialWaf : WAF!DetailsUnit
	to waf : WAF!DetailsUnit (
	)
}

-- @extends DataUnit, IndexUnitFields
abstract rule IndexUnit {
	from partialWaf : WAF!IndexUnit
	to waf : WAF!IndexUnit (
	)
}

-- @extends IndexUnit
rule IndexGridUnit {
	from partialWaf : WAF!IndexGridUnit
	to waf : WAF!IndexGridUnit (
	)
}

-- @extends IndexUnit
rule IndexPageDirectionUnit {
	from partialWaf : WAF!IndexPageDirectionUnit
	to waf : WAF!IndexPageDirectionUnit (
	)
}

-- @extends IndexUnit
rule IndexLineDirectionUnit {
	from partialWaf : WAF!IndexLineDirectionUnit
	to waf : WAF!IndexLineDirectionUnit (
	)
}

-- @extends DynamicUnit, ControlUnitFields
abstract rule ControlUnit {
	from partialWaf : WAF!ControlUnit
	to waf : WAF!ControlUnit (
	)
}

-- @extends ControlUnit, SearchUnitFields
rule SearchUnit {
	from partialWaf : WAF!SearchUnit
	to waf : WAF!SearchUnit (
	)
}

-- @extends ControlUnit, ActionUnitFields
rule ActionUnit {
	from partialWaf : WAF!ActionUnit
	to waf : WAF!ActionUnit (
	)
}

-- @extends EditUnit
rule RegistrationUnit {
	from partialWaf : WAF!RegistrationUnit
	to waf : WAF!RegistrationUnit (
	)
}

-- @extends ControlUnit, LoginUnitFields
rule LoginUnit {
	from partialWaf : WAF!LoginUnit
	to waf : WAF!LoginUnit (
	)
}

-- @extends ControlUnit
rule ForgottenPasswordUnit {
	from partialWaf : WAF!ForgottenPasswordUnit
	to waf : WAF!ForgottenPasswordUnit (
	)
}
